from random import choice
import aiohttp
import xmltodict
import html
from main import dp
from aiogram.types import Message


# yandex news
news = {"–∞—Ä–º–∏—è": "https://news.yandex.ru/army.rss",
        "–∞–≤—Ç–æ": "https://news.yandex.ru/auto.rss",
        "–º–∏—Ä": "https://news.yandex.ru/world.rss",
        "–≥–ª–∞–≤–Ω–æ–µ": "https://news.yandex.ru/index.rss",
        "–∏–≥—Ä—ã": "https://news.yandex.ru/games.rss",
        "–∏–Ω—Ç–µ—Ä–µ–Ω–µ—Ç": "https://news.yandex.ru/internet.rss",
        "–∫–∏–Ω–æ": "https://news.yandex.ru/movies.rss",
        "–º—É–∑—ã–∫–∞": "https://news.yandex.ru/music.rss",
        "–ø–æ–ª–∏—Ç–∏–∫–∞": "https://news.yandex.ru/politics.rss",
        "–Ω–∞—É–∫–∞": "https://news.yandex.ru/science.rss",
        "—ç–∫–æ–Ω–æ–º–∏–∫–∞": "https://news.yandex.ru/business.rss",
        "—Å–ø–æ—Ä—Ç": "https://news.yandex.ru/sport.rss",
        "–ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è": "https://news.yandex.ru/incident.rss",
        "–∫–æ—Å–º–æ—Å": "https://news.yandex.ru/cosmos.rss"}


def unquote(data):
    temp = data
    if issubclass(temp.__class__, str):
        return html.unescape(html.unescape(temp))
    if issubclass(temp.__class__, dict):
        for k, v in temp.items():
            temp[k] = unquote(v)
    if issubclass(temp.__class__, list):
        for i in range(len(temp)):
            temp[i] = unquote(temp[i])
    return temp


# command
# news - –ø–æ–∫–∞–∑–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å, news [—Ç–µ–º–∞] - –ø–æ–∫–∞–∑–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–π —Ç–µ–º–∞—Ç–∏–∫–∏, news –ø–æ–º–æ—â—å/help - –ø–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–º—ã
@dp.message_handler(commands=['news'])
async def get_yandex_news(message: Message):
    url = news["–≥–ª–∞–≤–Ω–æ–µ"]

    if message.text == '/news':
        args = ''
    else:
        args = ''.join(message.text.split('/news ')[1]).split(" ")

    if args:
        category = args.pop()

        if category.lower() in ["–ø–æ–º–æ—â—å", "–ø–æ–º–æ—â", "–ø–æ–º–æ–≥–∏", "–ø–æ–º–æ–≥", 'help']:
            await message.answer(f"news [—Ç–µ–º–∞], –≥–¥–µ —Ç–µ–º–∞ - —ç—Ç–æ –æ–¥–Ω–æ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —Å–ª–æ–≤:\n"
                                 f"{', '.join([k[0].upper() + k[1:] for k in news.keys()])}")

        if category.lower() in news:
            url = news[category]

    async with aiohttp.ClientSession() as sess:
        async with sess.get(url) as resp:
            xml = xmltodict.parse(await resp.text())
            items = xml["rss"]["channel"]["item"]
            item = unquote(choice(items))

            await message.answer(f'üëâ {item["title"]}\n'
                                 f'üëâ {item["description"]}')
